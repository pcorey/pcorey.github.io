{"version":3,"sources":["components/Home/index.js","components/App/AppPure.js","components/App/index.js","index.js"],"names":["Circle","ref","useRef","useEffect","canvas","current","context","getContext","ratio","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","getPixelRatio","width","getComputedStyle","getPropertyValue","slice","height","style","concat","requestId","i","render","clearRect","beginPath","arc","Math","abs","cos","PI","fill","requestAnimationFrame","cancelAnimationFrame","react_default","a","createElement","foo","AppPure","Home","App","App_AppPure","ReactDOM","components_App","document","getElementById"],"mappings":"qJAsEeA,EArDA,WACX,IAAIC,EAAMC,mBA2CV,OAzCAC,oBAAU,WACN,IAAIC,EAASH,EAAII,QACbC,EAAUF,EAAOG,WAAW,MAE5BC,EApBU,SAAAF,GAClB,IAAIG,EACAH,EAAQI,wBACRJ,EAAQK,8BACRL,EAAQM,2BACRN,EAAQO,0BACRP,EAAQQ,yBACRR,EAAQI,wBACR,EAEJ,OAAQK,OAAOC,kBAAoB,GAAKP,EAUxBQ,CAAcX,GACtBY,EAAQC,iBAAiBf,GACxBgB,iBAAiB,SACjBC,MAAM,GAAI,GACXC,EAASH,iBAAiBf,GACzBgB,iBAAiB,UACjBC,MAAM,GAAI,GAEfjB,EAAOc,MAAQA,EAAQV,EACvBJ,EAAOkB,OAASA,EAASd,EACzBJ,EAAOmB,MAAML,MAAb,GAAAM,OAAwBN,EAAxB,MACAd,EAAOmB,MAAMD,OAAb,GAAAE,OAAyBF,EAAzB,MAEA,IAAIG,EACAC,EAAI,EAkBR,OAjBe,SAATC,IACFrB,EAAQsB,UAAU,EAAG,EAAGxB,EAAOc,MAAOd,EAAOkB,QAC7ChB,EAAQuB,YACRvB,EAAQwB,IACJ1B,EAAOc,MAAQ,EACfd,EAAOkB,OAAS,EACflB,EAAOc,MAAQ,EAAKa,KAAKC,IAAID,KAAKE,IAAIP,IACvC,EACA,EAAIK,KAAKG,IAEb5B,EAAQ6B,OACRT,GAAK,IACLD,EAAYW,sBAAsBT,GAGtCA,GAEO,WACHU,qBAAqBZ,MAKzBa,EAAAC,EAAAC,cAAA,UACIvC,IAAKA,EACLsB,MAAO,CAAEL,MAAO,QAASI,OAAQ,SACjCmB,IAAI,SC5DDC,EAFC,kBAAMJ,EAAAC,EAAAC,cAACG,EAAD,OCEPC,EAFH,kBAAMN,EAAAC,EAAAC,cAACK,EAAD,qBCMlBC,EAASnB,OAAOW,EAAAC,EAAAC,cAACO,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d0e526e8.chunk.js","sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\n\nconst getPixelRatio = context => {\n    var backingStore =\n        context.backingStorePixelRatio ||\n        context.webkitBackingStorePixelRatio ||\n        context.mozBackingStorePixelRatio ||\n        context.msBackingStorePixelRatio ||\n        context.oBackingStorePixelRatio ||\n        context.backingStorePixelRatio ||\n        1;\n\n    return (window.devicePixelRatio || 1) / backingStore;\n};\n\nconst Circle = () => {\n    let ref = useRef();\n\n    useEffect(() => {\n        let canvas = ref.current;\n        let context = canvas.getContext('2d');\n\n        let ratio = getPixelRatio(context);\n        let width = getComputedStyle(canvas)\n            .getPropertyValue('width')\n            .slice(0, -2);\n        let height = getComputedStyle(canvas)\n            .getPropertyValue('height')\n            .slice(0, -2);\n\n        canvas.width = width * ratio;\n        canvas.height = height * ratio;\n        canvas.style.width = `${width}px`;\n        canvas.style.height = `${height}px`;\n\n        let requestId,\n            i = 0;\n        const render = () => {\n            context.clearRect(0, 0, canvas.width, canvas.height);\n            context.beginPath();\n            context.arc(\n                canvas.width / 2,\n                canvas.height / 2,\n                (canvas.width / 2) * Math.abs(Math.cos(i)),\n                0,\n                2 * Math.PI\n            );\n            context.fill();\n            i += 0.05;\n            requestId = requestAnimationFrame(render);\n        };\n\n        render();\n\n        return () => {\n            cancelAnimationFrame(requestId);\n        };\n    });\n\n    return (\n        <canvas\n            ref={ref}\n            style={{ width: '100px', height: '100px' }}\n            foo=\"bar\"\n        />\n    );\n};\n\nexport default Circle;\n","import Home from '../Home';\nimport React from 'react';\n\nconst AppPure = () => <Home />;\n\nexport default AppPure;\n","import AppPure from './AppPure';\nimport React from 'react';\n\nconst App = () => <AppPure />;\n\nexport default App;\n","// import 'react-app-polyfill/ie11';\nimport App from './components/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import 'semantic-ui-css/semantic.min.css';\n// import './index.css';\n// import './semantic-overrides.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}